<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>clocks on silly onions</title><link>/tags/clocks/</link><description>Recent content in clocks on silly onions</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Aarush Ahuja :: 2020</copyright><lastBuildDate>Tue, 12 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/clocks/index.xml" rel="self" type="application/rss+xml"/><item><title>Clocks, Timers and Virtualization</title><link>/posts/2020-05-07-clocks-timers-virtualization/</link><pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate><guid>/posts/2020-05-07-clocks-timers-virtualization/</guid><description>The aim of this post is to learn the kinds of clocks and timing mechanism&amp;rsquo;s available on a system, how they are virtualized by different hypervisors (with a focus on Hyper-V and WSL2) and what is the practical resolution of clocks and timers in both virtualized and bare-metal x86 systems accessible via programming languages like C or Golang. Clocks and Timers A system might have two kinds of clocks available to use in the system, a Wall-Clock Timer and a Monotonic Clock.</description></item></channel></rss>